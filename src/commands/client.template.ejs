import BaseCollection from './base.js';
import { Models } from 'appwrite';

type <%- ClassName %>Type = {
    <% for (var i = 0; i < Attributes.length; i++) { %>
        <%- Attributes[i].type %>
    <% } %>
}

export type <%- ClassName %>ReadType = <%- ClassName %>Type & Models.Document;

export type <%- ClassName %>InsertType = Partial<<%- ClassName %>Type>

class <%- ClassName %>Service extends BaseCollection<<%- ClassName %>ReadType, <%- ClassName %>InsertType>{
    constructor() {
        super({
            <% for (var i = 0; i < Attributes.length; i++) { %>
                <%- Attributes[i].key %>,
            <% } %>
        });
    }

    public listDocuments(queries?: string[]) {
        return super.listDocuments("<%- DatabaseId %>", "<%- CollectionId %>", queries);
    }

    public createDocument(documentId: string, data: <%- ClassName %>InsertType) {
        return super.createDocument("<%- DatabaseId %>", "<%- CollectionId %>", documentId, data);
    }

    public getDocument(documentId: string) {
        return super.getDocument("<%- DatabaseId %>", "<%- CollectionId %>", documentId);
    }

    public updateDocument(documentId: string, data: <%- ClassName %>InsertType) {
        return super.updateDocument("<%- DatabaseId %>", "<%- CollectionId %>", documentId, data);
    }

    public deleteDocument(documentId: string) {
        return super.deleteDocument("<%- DatabaseId %>", "<%- CollectionId %>", documentId);
    }
}

export const <%- ClassName %> = new <%- ClassName %>Service();